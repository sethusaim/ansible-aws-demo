- name: Setup application in instance
  hosts: Application_Group
  roles:
    - cloudalchemy.node_exporter
  become: true
  vars_files:
    - /home/ubuntu/vars/variables.yml
  tasks:
    - name: Update using apt
      apt:
        update_cache: true

    - name: Update using apt-get
      apt:
        update_cache: true
        force_apt_get: yes

    - name: Install pip3,nginx,gunicorn
      apt:
        name:
          - python3-pip
          - nginx
          - gunicorn
        state: present
        update_cache: true

    - name: Install apache-utils
      apt:
        name: apache-utils
        state: present
        force_apt_get: yes

    - name: Initialize Git repo
      shell: git init
      args:
        executable: /usr/bin/bash

    - name: Configure Git repo
      shell: git config --global --add safe.directory /home/ubuntu

    - name: Get remote origin status
      shell: git remote show
      register: origin_status

    - name: Add remote origin
      block:
        - name: Add remote origin
          shell: git remote add origin https://github.com/sethusaim/Wafer-Fault-Kubernetes.git
          args:
            executable: /usr/bin/bash
      when: origin_status.stdout != "origin"

    - name: Fetch origin
      shell: git fetch origin
      args:
        executable: /usr/bin/bash

    - name: Check out application folder
      shell: git checkout origin/main -- application
      args:
        executable: /usr/bin/bash

    - name: Install requirements
      ansible.builtin.pip:
        requirements: /home/ubuntu/application/requirements.txt

    - name: Install gunicorn,passlib via pip3
      ansible.builtin.pip:
        name:
          - gunicorn
          - passlib
        state: present

    - name: Set user name and password for nginx
      community.general.htpasswd:
        path: /etc/nginx/.htpasswd
        name: "{{application.username}}"
        password: "{{application.password}}"

    - name: Copy the nginx configuration file
      ansible.builtin.copy:
        src: /home/ubuntu/flaskapp
        dest: /etc/nginx/sites-enabled/

    - name: Restart nginx service
      service:
        name: nginx
        state: restarted

    - name: Copy the application service file
      ansible.builtin.copy:
        src: /home/ubuntu/app.service
        dest: /etc/systemd/system/

    - name: Change permissions for sock file
      shell: sudo chown ubuntu:www-data /home/ubuntu/application/

    - name: Reload the daemon
      systemd:
        daemon_reload: yes

    - name: Enable app service
      systemd:
        name: app
        enabled: yes

    - name: Restart app service
      systemd:
        name: app
        state: restarted

    - name: Copy the secure app nginx file
      ansible.builtin.copy:
        src: /home/ubuntu/app
        dest: /etc/nginx/sites-enabled/

    - name: Restart nginx
      service:
        name: nginx
        state: restarted

    - name: Restart app service
      service:
        name: app
        state: restarted
