- name: Setup ArgoCD in EKS cluster
  hosts: Application_Group
  become: true
  vars_files:
    - /home/ubuntu/vars/variables.yml
  tasks:
    - name: Update using apt
      apt:
        update_cache: true

    - name: Update using apt-get
      apt:
        update_cache: true
        force_apt_get: yes

    - name: Create argocd namespace
      become: false
      shell: kubectl apply -f https://raw.githubusercontent.com/sethusaim/Ansible-AWS-Demo/main/manifests/argocd-namespace.yaml

    - name: Install ArgoCD manifest files
      become: false
      shell: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

    - name: Wait till all pods reach running status
      shell: sleep 60

    - name: Patch load balancer to argocd server
      become: false
      shell: kubectl patch svc argocd-server -n argocd -p '{"spec":{"ports":[{"name":"custom","port":9096,"protocol":"TCP","targetPort":8080}],"type":"LoadBalancer"}}'

    - name: Wait till load balancer ip address is available
      shell: sleep 5

    - name: Install jq
      apt:
        name: jq
        state: present

    - name: Get load balancer url for argocd server
      become: false
      shell: kubectl get svc argocd-server -n argocd -o json | jq .status.loadBalancer.ingress[0].hostname
      register: argocd_loadbalancer_url

    - name: Get argocd server initial password
      become: false
      shell: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo
      register: argocd_init_password

    - name: Get the argocd cli binary file
      get_url:
        url: https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        dest: /usr/local/bin/argocd

    - name: Set execution permissions for argocd cli binary file
      file:
        path: /usr/local/bin/argocd
        mode: +x

    - name: Login to argocd server with initial password
      shell: argocd login {{ argocd_loadbalancer_url.stdout }} --username {{ k8s.argocd.username }} --password {{ argocd_init_password.stdout }} --insecure
      register: login_status
      until: "login_status is not failed"
      retries: 10
      delay: 10

    - name: Update argocd server password
      shell: argocd account update-password --current-password {{ argocd_init_password.stdout }} --new-password '{{ k8s.argocd.password }}' --insecure

    - debug:
        msg: "Open with port 9096,ArgoCD url is {{ argocd_loadbalancer_url.stdout }}"
